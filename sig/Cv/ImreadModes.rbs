module Cv
  class ImreadModes
    def initialize: () -> void
    def &: (arg_0: Enum cv::ImreadModes) -> Integer
    def <<: (arg_0: Integer) -> Integer
    def <=>: (arg_0: Enum cv::ImreadModes) -> Integer
    def >>: (arg_0: Integer) -> Integer
    def ^: (arg_0: Enum cv::ImreadModes) -> Integer
    def coerce: (arg_0: Int) -> Rice::Array
    def eql?: (arg_0: Enum cv::ImreadModes) -> bool
    def hash: () -> Integer
    def inspect: () -> Rice::String
    def to_int: () -> Integer
    def to_s: () -> Rice::String
    def |: (arg_0: Enum cv::ImreadModes) -> Integer
    def ~: () -> Integer
  end
end
