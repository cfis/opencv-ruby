module Cv
  class InputArray
    def initialize: () -> void
               | (m: Cv::Mat) -> void
               | (expr: Cv::MatExpr) -> void
               | (vec: Std::Vector≺cv꞉꞉Mat≻) -> void
               | (vec: Std::Vector≺bool≻) -> void
               | (val: Double) -> void
               | (d_mat: Cv::cuda::GpuMat) -> void
               | (buf: Cv::ogl::Buffer) -> void
               | (cuda_mem: Cv::cuda::HostMem) -> void
               | (um: Cv::UMat) -> void
               | (umv: Std::Vector≺cv꞉꞉UMat≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Point_≺int≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Point_≺int≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Point_≺float≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Point_≺double≻≻) -> void
               | (arg_0: Std::Vector≺vector≺cv꞉꞉Point_≺int≻≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned char‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned char‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned char‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned char‚ 4≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺short‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺short‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺short‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺short‚ 4≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned short‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned short‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned short‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺unsigned short‚ 4≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺int‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺int‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺int‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺int‚ 4≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺float‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺float‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺float‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺float‚ 4≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺float‚ 6≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺double‚ 1≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺double‚ 2≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺double‚ 3≻≻) -> void
               | (arg_0: Std::Vector≺cv꞉꞉Vec≺double‚ 4≻≻) -> void
               | (_flags: Integer, _obj: Rice::Buffer≺void∗≻) -> void
    def channels: (i: Integer) -> Integer
    def get_sz: () -> Cv::Size_≺int≻
    def gpu_mat?: () -> bool
    def get_obj: () -> Rice::Buffer≺void∗≻
    def get_flags: () -> Integer
    def get_o_gl_buffer: () -> Cv::ogl::Buffer
    def depth: (i: Integer) -> Integer
    def get_gpu_mat: () -> Cv::cuda::GpuMat
    def copy_to: (arr: Cv::debug_build_guard::OutputArray) -> void
            | (arr: Cv::debug_build_guard::OutputArray, mask: Cv::debug_build_guard::InputArray) -> void
    def get_gpu_mat_vector: (gpumv: Std::Vector≺cv꞉꞉cuda꞉꞉GpuMat≻) -> void
    def continuous?: (i: Integer) -> bool
    def cols: (i: Integer) -> Integer
    def get_u_mat_vector: (umv: Std::Vector≺cv꞉꞉UMat≻) -> void
    def dims: (i: Integer) -> Integer
    def get_mat_vector: (mv: Std::Vector≺cv꞉꞉Mat≻) -> void
    def empty?: () -> bool
    def get_mat: (idx: Integer) -> Cv::Mat
    def get_mat_: (idx: Integer) -> Cv::Mat
    def get_u_mat: (idx: Integer) -> Cv::UMat
    def gpu_mat_vector?: () -> bool
    def kind: () -> Enum cv::debug_build_guard::_InputArray::KindFlag
    def mat?: () -> bool
    def mat_vector?: () -> bool
    def matx?: () -> bool
    def offset: (i: Integer) -> Integer
    def rows: (i: Integer) -> Integer
    def same_size?: (arr: Cv::debug_build_guard::InputArray) -> bool
    def size: (i: Integer) -> Cv::Size_≺int≻
    def sizend: (sz: Rice::Buffer≺int∗≻, i: Integer) -> Integer
    def step: (i: Integer) -> Integer
    def submatrix?: (i: Integer) -> bool
    def total: (i: Integer) -> Integer
    def type: (i: Integer) -> Integer
    def u_mat?: () -> bool
    def u_mat_vector?: () -> bool
    def vector?: () -> bool
  end
end
