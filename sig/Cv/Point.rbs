module Cv
  class Point
    attr_reader x: Integer
    attr_reader y: Integer

    def initialize: () -> void
               | (v: Cv::Vec≺int‚ 2≻) -> void
               | (sz: Cv::Size_≺int≻) -> void
               | (sz: Cv::Size_≺int≻) -> void
               | () -> void
               | (v: Cv::Vec≺int‚ 2≻) -> void
               | (_x: Integer, _y: Integer) -> void
               | (_x: Integer, _y: Integer) -> void
    def !=: (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
    def *: (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
    def +: (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
    def -: (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
      | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
    def /: (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
      | (arg_0: Integer) -> Cv::Point_≺int≻
      | (arg_0: Float) -> Cv::Point_≺int≻
    def ==: (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
       | (arg_0: Cv::Point_≺int≻) -> bool
    def assign_divide: (arg_0: Integer) -> Cv::Point_≺int≻
                  | (arg_0: Integer) -> Cv::Point_≺int≻
                  | (arg_0: Float) -> Cv::Point_≺int≻
                  | (arg_0: Float) -> Cv::Point_≺int≻
                  | (arg_0: Float) -> Cv::Point_≺int≻
                  | (arg_0: Integer) -> Cv::Point_≺int≻
                  | (arg_0: Float) -> Cv::Point_≺int≻
                  | (arg_0: Integer) -> Cv::Point_≺int≻
    def assign_minus: (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                 | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                 | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                 | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
    def assign_multiply: (arg_0: Float) -> Cv::Point_≺int≻
                    | (arg_0: Float) -> Cv::Point_≺int≻
                    | (arg_0: Float) -> Cv::Point_≺int≻
                    | (arg_0: Float) -> Cv::Point_≺int≻
    def assign_plus: (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
                | (arg_0: Cv::Point_≺int≻) -> Cv::Point_≺int≻
    def cross: (pt: Cv::Point_≺int≻) -> Float
          | (pt: Cv::Point_≺int≻) -> Float
    def ddot: (pt: Cv::Point_≺int≻) -> Float
         | (pt: Cv::Point_≺int≻) -> Float
    def dot: (pt: Cv::Point_≺int≻) -> Integer
        | (pt: Cv::Point_≺int≻) -> Integer
    def initialize_copy: (pt: Cv::Point_≺int≻) -> void
                    | (pt: Cv::Point_≺int≻) -> void
    def inside?: (r: Cv::Rect_≺int≻) -> bool
            | (r: Cv::Rect_≺int≻) -> bool
    def inspect: () -> Std::String
            | () -> Std::String
    def norm: () -> Float
         | () -> Float
    def to_s: () -> Std::String
         | () -> Std::String
    def to_vec: () -> Cv::Vec≺int‚ 2≻
           | () -> Cv::Vec≺int‚ 2≻
  end
end
