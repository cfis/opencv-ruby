module Cv
  class Rect2l
    attr_accessor height: Integer
    attr_accessor width: Integer
    attr_accessor x: Integer
    attr_accessor y: Integer

    def !=: (arg_0: Cv::Rect_≺Int64≻) -> bool
    def +: (arg_0: Cv::Size_≺Int64≻) -> Cv::Rect_≺Int64≻
      | (arg_0: Cv::Point_≺Int64≻) -> Cv::Rect_≺Int64≻
    def initialize: (org: Cv::Point_≺Int64≻, sz: Cv::Size_≺Int64≻) -> void
               | (pt1: Cv::Point_≺Int64≻, pt2: Cv::Point_≺Int64≻) -> void
               | () -> void
               | (_x: Integer, _y: Integer, _width: Integer, _height: Integer) -> void
    def -: (arg_0: Cv::Size_≺Int64≻) -> Cv::Rect_≺Int64≻
      | (arg_0: Cv::Point_≺Int64≻) -> Cv::Rect_≺Int64≻
    def ==: (arg_0: Cv::Rect_≺Int64≻) -> bool
    def area: () -> Integer
    def assign_minus: (arg_0: Cv::Point_≺Int64≻) -> Cv::Rect_≺Int64≻
                 | (arg_0: Cv::Size_≺Int64≻) -> Cv::Rect_≺Int64≻
    def assign_plus: (arg_0: Cv::Size_≺Int64≻) -> Cv::Rect_≺Int64≻
                | (arg_0: Cv::Point_≺Int64≻) -> Cv::Rect_≺Int64≻
    def br: () -> Cv::Point_≺Int64≻
    def contains?: (pt: Cv::Point_≺Int64≻) -> bool
    def empty?: () -> bool
    def initialize_copy: (r: Cv::Rect_≺Int64≻) -> void
    def inspect: () -> Std::String
    def size: () -> Cv::Size_≺Int64≻
    def tl: () -> Cv::Point_≺Int64≻
    def |: (arg_0: Cv::Rect_≺Int64≻) -> Cv::Rect_≺Int64≻
    def |=: (arg_0: Cv::Rect_≺Int64≻) -> Cv::Rect_≺Int64≻
  end
end
