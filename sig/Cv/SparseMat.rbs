module Cv
  class SparseMat
    attr_accessor flags: Integer
    attr_accessor hdr: Cv::SparseMat::Hdr

    def initialize: () -> void
               | (m: Cv::Mat) -> void
               | (dims: Integer, _sizes: Rice::Buffer≺int const∗≻, _type: Integer) -> void
    def addref: () -> void
    def assign_to: (m: Cv::SparseMat, type: Integer) -> void
    def channels: () -> Integer
    def clear: () -> void
    def clone: () -> Cv::SparseMat
    def convert_to: (m: Cv::SparseMat, rtype: Integer, alpha: Float) -> void
               | (m: Cv::Mat, rtype: Integer, alpha: Float, beta: Float) -> void
    def copy_to: (m: Cv::SparseMat) -> void
            | (m: Cv::Mat) -> void
    def create: (dims: Integer, _sizes: Rice::Buffer≺int const∗≻, _type: Integer) -> void
    def depth: () -> Integer
    def dims: () -> Integer
    def elem_size: () -> Integer
    def elem_size1: () -> Integer
    def erase: (idx: Rice::Buffer≺int const∗≻, hashval: Rice::Buffer≺unsigned Int64∗≻) -> void
          | (i0: Integer, i1: Integer, hashval: Rice::Buffer≺unsigned Int64∗≻) -> void
          | (i0: Integer, i1: Integer, i2: Integer, hashval: Rice::Buffer≺unsigned Int64∗≻) -> void
    def hash: (i0: Integer) -> Integer
         | (idx: Rice::Buffer≺int const∗≻) -> Integer
         | (i0: Integer, i1: Integer) -> Integer
         | (i0: Integer, i1: Integer, i2: Integer) -> Integer
    def initialize_copy: (m: Cv::SparseMat) -> void
    def new_node: (idx: Rice::Buffer≺int const∗≻, hashval: Integer) -> Rice::Buffer≺unsigned char∗≻
    def node: (nidx: Integer) -> Cv::SparseMat::Node
         | (nidx: Integer) -> Cv::SparseMat::Node
    def nzcount: () -> Integer
    def ptr: (idx: Rice::Buffer≺int const∗≻, create_missing: bool, hashval: Rice::Buffer≺unsigned Int64∗≻) -> Rice::Buffer≺unsigned char∗≻
        | (i0: Integer, create_missing: bool, hashval: Rice::Buffer≺unsigned Int64∗≻) -> Rice::Buffer≺unsigned char∗≻
        | (i0: Integer, i1: Integer, create_missing: bool, hashval: Rice::Buffer≺unsigned Int64∗≻) -> Rice::Buffer≺unsigned char∗≻
        | (i0: Integer, i1: Integer, i2: Integer, create_missing: bool, hashval: Rice::Buffer≺unsigned Int64∗≻) -> Rice::Buffer≺unsigned char∗≻
    def release: () -> void
    def remove_node: (hidx: Integer, nidx: Integer, previdx: Integer) -> void
    def resize_hash_tab: (newsize: Integer) -> void
    def size: () -> Rice::Buffer≺int const∗≻
         | (i: Integer) -> Integer
    def type: () -> Integer
  end
end
